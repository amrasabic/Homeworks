package ba.bitcamp.homework26.task02;

import java.util.Random;

/**
 * TASK #2 – THREE THREADS OF ONE CLASS Napraviti tri Thread-a. Prvi isprinta
 * brojeve od 1 do 10, sa pauzom od 200 [ms] izmedu svakog broja. Drugi isprinta
 * cetiri puta „BitCamp“ sa pauzom od 1000 [ms], a treci isprinta pet Random
 * brojeva u rasponu od 1 do 5 sa pauzom od 700 [ms] izmedu svakog.
 * 
 * @author Amra
 *
 */
public class OneClassThreads implements Runnable {

	private String name;

	// constructor accepts only one string
	public OneClassThreads(String word) {
		this.name = word;
	}

	public static void main(String[] args) {

		OneClassThreads t1 = new OneClassThreads("BitCamp");
		OneClassThreads t2 = new OneClassThreads("Counter");
		OneClassThreads t3 = new OneClassThreads("Random");

		t2.run();
		t1.run();
		t3.run();
	}

	@Override
	public void run() {
		int counter = 1;
		// if name is "Counter" his job is to count from 1 to 10
		if (this.name.equals("Counter")) {
			while (counter < 11) {
				System.out.println(counter++);
				try {
					Thread.sleep(200);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
			// if name is "BitCamp" he will type "BitCamp" every second and
			// repeat it 4x
		} else if (this.name.equals("BitCamp")) {
			counter = 0;
			while (counter < 4) {
				System.out.println("BitCamp");
				counter++;
				try {
					Thread.sleep(1000);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
			// if name is "Random" it will collect random number in range 1 - 5,
			// and print it out, repeat it 5 times, 700milSec time difference
		} else if (this.name.equals("Random")) {
			counter = 0;
			Random r = new Random();
			while (counter < 5) {
				int rand = r.nextInt(5 + 1);
				System.out.println(rand);
				counter++;
				try {
					Thread.sleep(700);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		}
	}
}
